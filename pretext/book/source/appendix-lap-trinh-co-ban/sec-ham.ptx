<?xml version="1.0" encoding="UTF-8"?>

<!--*****************************************
This is part of the Ma Trận Sơ Cấp
Copyright (C) 2023-2024
Phạm Công Vinh, Phạm Xuân Trung
See the file COPYING for copying conditions.
******************************************-->

<section xml:id="sec-ham" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Hàm</title>

  <objectives>
    <ol>
      <li>Các mục tiêu của section.</li>
      <li></li>
      <li></li>
    </ol>
  </objectives>
  
  <p>
    Ta lại gặp một khái niệm nữa rất thân thuộc trong toán học<mdash /><term>Hàm</term>. Và nó cũng đóng vai trò thiết yếu trong lập trình.
  </p>

  <p>
    Giả sử ta có 100 biểu thức toán:

    <md>
      <mrow>1^2 + 2 \cdot 1 + 1</mrow>
      <mrow>2^2 + 2 \cdot 2 + 1</mrow>
      <mrow>\vdots</mrow>
      <mrow>100^2 + 2 \cdot 100 + 1</mrow>
    </md>

    Ta nhận ra chúng có cùng một dạng là đa thức bậc hai. Vậy, ta có thể rút gọn cách trình bày bằng hàm số như sau:

    <md>
      <mrow>f(x) = x^2 + 2 \cdot x + 1</mrow>
      <mrow></mrow>
      <mrow>f(1)</mrow>
      <mrow>f(2)</mrow>
      <mrow>\vdots</mrow>
      <mrow>f(100)</mrow>
    </md>
  </p>

  <p>
    <term>Hàm</term> trong lập trình cũng được thiết kế tương tự như vậy.
  </p>

  <definition xml:id="def-ham">
    <statement>
      <p>
        <term>Hàm</term> là một đoạn code có thể tái sử dụng được dùng để thực hiện một tác vụ nào đó.
      </p>
      <p>
        Hàm có thể không nhận hoặc nhận một hay nhiều hơn dữ liệu <term>đầu vào</term>.
      </p>
      <p>
        Hàm có thể không trả lại hoặc trả lại một hay nhiều hơn dữ liệu <term>đầu ra</term>.
      </p>
      <p>
        Thuật ngữ cho việc tạo ra một hàm mới là <term>khai báo hàm</term>.
      </p>
      <p>
        Thuật ngữ cho việc sử dụng một hàm là <term>gọi hàm</term>.
      </p>
    </statement>
  </definition>

  <p>
    Ở phần này ta chưa đi sâu vào cú pháp khai báo hàm, mà ta sẽ chỉ tập trung vào việc sử dụng những hàm có sẵn hoặc được cung cấp bởi thư viện. Để biết thêm về cú pháp <term>khai báo hàm</term>, tham khảo <xref ref="sec-khai-bao-ham"/>.
  </p>

  <technology>
    <title>Gọi hàm</title>
    <p>
      <em>Tùy vào từng hàm</em>, ta có hai cách: <me>{\color{blue} \text{tên hàm}} \, \text{(đầu vào 1, đầu vào 2, ...)}</me> hoặc <me>\text{đầu vào 1.} {\color{blue} \text{tên hàm}} \, \text{(đầu vào 2, đầu vào 3, ...)}</me>
    </p>
  </technology>
  
  <p>
    Một ví dụ thân thuộc là hàm <c>print()</c>. Nó có thể được gọi ở bất cứ nơi nào trong code, và với một tập hợp các dữ liệu đầu vào bất kỳ.
  </p>

  <sage language="python">
    <input>
      print(5) 
      print()
      print(2, -2)
      print(1, "Hello World!", 5.5)

    </input>
  </sage>
  <problem>
    <pre>
      5
      
      2 -2
      1 Hello World! 5.5
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      Dòng 1: Ta truyền cho hàm <c>print()</c> một dữ liệu đầu vào là <c>5</c>.
    </p>
    <p>
      Dòng 2: Ta không truyền dữ liệu đầu vào, nên <c>print()</c> xuất ra terminal một dòng trắng.
    </p>
    <p>
      Dòng 3: Ta truyền cho nó hai dữ liệu đầu vào là <c>2</c> và <c>-2</c>.
    </p>
    <p>
      Dòng 4: Ta truyền cho nó nhiều dữ liệu đầu vào, và chúng có các kiểu dữ liệu khác nhau.
    </p>
  </investigation>

  <p>
    Một ví dụ nữa là hàm <c>np.sqrt()</c> của Numpy. Nó có nhiệm vụ tính toán và trả lại căn bậc hai của dữ liệu đầu vào.
  </p>

  <sage language="python">
    <input>
      import numpy as np # Su dung thu vien Numpy 

      print(np.sqrt(9))
    </input>
  </sage>
  <problem>
    <pre>
      3.0
    </pre>
  </problem>
  <investigation>
    <p>
      Hàm <c>np.sqrt()</c> nhận một giá trị đầu vào và trả lại căn bậc hai của nó.
    </p>
  </investigation>
  
  <p>
    Nhưng hàm <c>np.sqrt()</c> có nhiều yêu cầu hơn <c>print()</c>. Nó chỉ nhận <em>duy nhất một</em> giá trị đầu vào, và giá trị đó phải là <em>số</em>. Hai ví dụ dưới đây sẽ xuất hiện lỗi.
  </p>

  <sage language="python">
    <input>
      import numpy as np # Su dung thu vien Numpy 

      print(np.sqrt(9, 10))
    </input>
  </sage>
  <problem>
    <pre>
      TypeError
      Cell In [1], line 3

      ...

      TypeError: return arrays must be of ArrayType
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>Hàm <c>np.sqrt()</c> chỉ nhận duy nhất một dữ liệu đầu vào.</p>
    <p>
      Ta đang truyền cho nó nhiều hơn một dữ liệu đầu vào, nên hàm trả lại lỗi.
    </p>
  </investigation>

  <sage language="python">
    <input>
      import numpy as np # Su dung thu vien Numpy 

      print(np.sqrt("Hello World!"))
    </input>
  </sage>
  <problem>
    <pre>
      TypeError
      Cell In [1], line 3

      ...

      TypeError: ufunc 'sqrt' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      Dữ liệu đầu vào của <c>np.sqrt()</c> phải là số.</p>
    <p>
      Ta đang truyền cho nó kiểu <c>str</c>, nên hàm trả lại lỗi.
    </p>
  </investigation>

  <p>
    Ví dụ cuối cùng của ta là hàm <c>upper()</c>. Để sử dụng hàm này, ta phải tuân theo cú pháp gọi hàm thứ hai, với <q>đầu vào 1</q> là một chuỗi ký tự. <c>upper()</c> trả lại một chuỗi mới với mọi ký tự đều được viết hoa.
  </p>

  <sage language="python">
    <input>
      s = "Xin chao!" 

      print(s.upper())
    </input>
  </sage>
  <problem>
    <pre>
      XIN CHAO!
    </pre>
  </problem>
  <investigation>
    <p>Hàm <c>upper()</c> trả lại chuỗi ký tự đầu vào sau khi đã được viết hoa.</p>
  </investigation>
 
  <p>
    Đây là một ví dụ có lỗi.
  </p>

  <sage language="python">
    <input>
      a = 5 
      print(a.upper())
    </input>
  </sage>
  <problem>
    <pre>
      AttributeError
      Cell In [1], line 2

      ...

      AttributeError: 'int' object has no attribute 'upper'
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      Hàm <c>upper()</c> chỉ nhận duy nhất một dữ liệu đầu vào có kiểu <c>str</c>.
    </p>
    <p>
      Dịch nôm na miêu tả của lỗi, ta được <q>int không có thuộc tính upper</q>.
    </p>
  </investigation>

</section>
