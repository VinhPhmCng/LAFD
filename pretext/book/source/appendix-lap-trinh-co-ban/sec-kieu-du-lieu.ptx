<?xml version="1.0" encoding="UTF-8"?>

<!--*****************************************
This is part of the Ma Trận Sơ Cấp
Copyright (C) 2023-2024
Phạm Công Vinh, Phạm Xuân Trung
See the file COPYING for copying conditions.
******************************************-->

<section xml:id="sec-kieu-du-lieu" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Kiểu Dữ Liệu</title>

  <objectives>
    <ol>
      <li>Các mục tiêu của section.</li>
      <li></li>
      <li></li>
    </ol>
  </objectives>
  
  <p>
    Hầu hết mọi thứ trên thế giới này đều có thể được lưu trữ thành dữ liệu<mdash></mdash>từ số liệu, chữ cái đến thông tin về một học sinh hay một mẫu xe ô tô.
  </p>

  <definition xml:id="def-kieu-du-lieu">
    <statement>
      <p>
        Và để <term>phân loại</term> các dữ liệu đó, ta có khái niệm <term>kiểu dữ liệu</term>.
      </p>
    </statement>
  </definition>

  <p>
    Hầu hết các ngôn ngữ lập trình hiện đại đều không thể thiếu các kiểu dữ liệu sau đây:
    <dl>
      <li>
        <title>str</title>
        <p>
          <term>Chuỗi ký tự</term>. Được bao quanh bởi dấu ngoặc kép <c>""</c> hoặc dấu ngoặc kép đơn <c>''</c>.
        </p>
      </li>

      <li>
        <title>int</title>
        <p>
          <term>Số nguyên</term>. Là một số thực không có các chữ số thập phân.
        </p>
      </li>

      <li>
        <title>float</title>
        <p>
          <term>Số dấu phẩy động</term>. Là một số thực có một hoặc nhiều chữ số thập phân.
        </p>
      </li>

      <li>
        <title>bool</title>
        <p>
          <term>Boolean</term> chỉ chứa một trong hai giá trị <c>True</c> hoặc <c>False</c>. Được dùng chủ yếu trong những câu lệnh điều kiện.
        </p>
      </li>

    </dl>
  </p>

  <note>
    <p>
      Trong Python và SageMath, khi ta khai báo biến hay cập nhật biến, nó sẽ dựa vào giá trị đó mà <em>tự động quyết định</em> kiểu dữ liệu của mình. Dưới đây là ví dụ:
    </p>
  </note>

  <sage language="python">
    <input>
      a = 5
      print(type(a))

      a = "5"
      print(type(a)) 
    </input>
  </sage>
  <problem>
    <pre>
      &lt;class 'int'&gt;
      &lt;class 'str'&gt;
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      Lệnh <c>type(a)</c> cho kết quả là kiểu dữ liệu của biến <c>a</c>, được ghi trong dấu ngoặc kép đơn. (Bạn không cần quá băn khoăn về từ khóa <c>class</c> ở đây. Bạn có thể hiểu nó đang viết tắt cho từ <q>classify</q>, nghĩa là <q>phân loại</q>.)
    </p>
    <p>
      Vậy, khi khai báo <c>a = 5</c>, biến <c>a</c> có kiểu <c>int</c>.
    </p>
    <p>
      Còn khi gán cho <c>a</c> giá trị mới là <c>"5"</c> (<alert>chú ý</alert> 5 nằm ở trong hai dấu ngoặc kép), nó tự động cập nhật thành kiểu <c>str</c>.
    </p>
  </investigation>

  <p>
    Từ ví dụ trên, ta thấy <c>a = "5"</c> rất khác với <c>a = 5</c>. Khi dữ liệu được bao quanh bởi hai dấu ngoặc kép (hoặc ngoặc kép đơn), nó chắc chắn sẽ có kiểu <c>str</c>. Từ đó, ta có định nghĩa sau.
  </p>

  <definition xml:id="def-kdl-cu-phap">
    <statement>
      <p>
        Các kiểu dữ liệu khác nhau có quy tắc riêng khi khai báo, còn được gọi là <term>cú pháp khai báo</term>.
      </p>
    </statement>
  </definition>
  
  <p>Ví dụ giá trị của các kiểu dữ liệu chính:</p>

  <sage language="python">
    <input>
      a = 3
      b = 3.0
      c = "3.0"
      d = True
      
      print(type(a))
      print(type(b))
      print(type(c))
      print(type(d))
    </input>
  </sage>
  <problem>
    <pre>
      &lt;class 'int'&gt;
      &lt;class 'float'&gt;
      &lt;class 'str'&gt;
      &lt;class 'bool'&gt;
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      Tương tự như ví dụ trên.
    </p>
    <p>
      Một lần nữa, bạn không cần suy nghĩ về từ khóa <c>class</c>. Bạn có thể hiểu nó đang viết tắt cho từ <q>classify</q>, nghĩa là <q>phân loại</q>.
    </p>
    <p>
      Nhưng chính xác mà nói thì nó đang liên hệ tới khái niệm <term>Class</term>. Đây là một chủ đề lớn nên nếu có hứng thú bạn có thể tìm hiểu trên mạng nhé.
    </p>
  </investigation>

  <p>
    Tiếp theo, ta có
  </p>

  <definition xml:id="def-kdl-tuong-tac">
    <statement>
      <p>
        Kiểu dữ liệu quyết định <term>tương tác</term> có thể giữa các dữ liệu với nhau.
      </p>
      <p>
        Nói cách khác, có rất nhiều loại tương tác có thể xảy ra giữa các dữ liêu (phép toán, phép nối chuỗi, v.v.), và chúng thay đổi dựa vào kiểu dữ liệu.
      </p>
    </statement>
  </definition>

  <p>
    Dưới đây là ví dụ:
  </p>

  <sage language="python">
    <input>
      a = 5
      b = -2
      print(a + b)

      c = 3.5
      d = 5.6
      print(c + d)

      print(a + c)
    </input>
  </sage>
  <problem>
    <pre>
      3
      9.1
      8.5
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      Ta biết cả <c>a</c> và <c>b</c> đều có kiểu <c>int</c>. Vì vậy, ta được phép cộng hai dữ liệu ấy với nhau.
    </p>
    <p>
      Tương tự, <c>c</c> và <c>d</c> là kiểu <c>float</c>, vì vậy phép cộng là hợp lệ.
    </p>
    <p>
      Dòng cuối cùng thú vị hơn một chút, vì ta vẫn có thể thực hiện phép cộng giữa <c>int</c> và <c>float</c>.
    </p>
  </investigation>

  <p>
    Nhưng ta <em>không</em> thể cộng <c>int</c> với <c>str</c>. Làm vậy sẽ xuất hiện <term>lỗi</term>.
  </p>

  <sage language="python">
    <input>
      a = 5
      s = "string"
      print(a + s)
    </input>
  </sage>
  <problem>
    <pre>
      TypeError
      Cell In [1], line 3

      ...

      TypeError: unsupported operand type(s) for +: 'int' and 'str'
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      Phép toán <c>+</c> là một tương tác <em>không hợp lệ</em> cho hai kiểu dữ liệu <c>int</c> và <c>str</c>.
    </p>
  </investigation>

  <p>
    Nhưng ta hoàn toàn có thể cộng các <c>str</c> với nhau. Việc này ghép chúng lại thành một chuỗi mới.
  </p>  

  <p>
    Dưới đây là ví dụ:
  </p>

  <sage language="python">
    <input>
      s1 = "Xin chao"
      s2 = "Nam"
      s3 = " Lan"
      
      print(s1 + s2)
      print(s1 + s3)
    </input>
  </sage>
  <problem>
    <pre>
      Xin chaoNam
      Xin chao Lan
    </pre>
  </problem>
  <investigation>
    <p></p>
    <p>
      <c>s1 + s2</c> là một tương tác hợp lệ và sẽ ghép chúng lại thành một chuỗi mới. Tương tự với <c>s1 + s3</c>.
    </p>
    <p>
      Ta thấy chuỗi <c>s3</c> khác với chuỗi <c>s1</c> ở chỗ nó có một ký tự khoảng trắng (space) ở đầu. Sự khác biệt này được làm rõ qua phép cộng chuỗi.
    </p>
  </investigation>
  
</section>