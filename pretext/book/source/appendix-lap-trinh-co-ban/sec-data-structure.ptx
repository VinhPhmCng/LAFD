<?xml version="1.0" encoding="UTF-8"?>

<!--*****************************************
This is part of Basic Programming
Copyright (C) 2024
Phạm Công Vinh
See the file COPYING for copying conditions.
******************************************-->

<section xml:id="sec-data-structure" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Cấu Trúc Dữ Liệu</title>

  <objectives>
    <ul>
      <li>Tìm hiểu các cấu trúc dữ liệu.</li>
      <li>Quan sát hai ví dụ<mdash /><term>danh sách</term> và <term>từ điển</term>.</li>
    </ul>
  </objectives>

  <introduction>

    <p>
      
      Cho đến nay, biến luôn chứa một giá trị duy nhất. Giả sử ta có một chương trình để chứa 100 số chính phương. Nó có thể trông như sau:
    </p>

    <program language="python">
      <input>
        ps1 = 0
        ps2 = 1
        ps3 = 4
        ps4 = 9
        # ...
        ps100 = 9801
      </input>
    </program>

    <p>
      Đoạn code trên không thực tế cho lắm. Để giảm số lượng biến, ta có thể sử dụng một đối tượng mới<mdash /><term>cấu trúc dữ liệu</term>.
    </p>

    <definition xml:id="def-data-structure">
      
      <statement>
        <p>
          <term>Cấu trúc dữ liệu</term> là một dữ liệu có khả năng chứa cùng một lúc nhiều dữ liệu khác.
        </p>
        <p>
          Các dữ liệu <q>con</q> của một cấu trúc dữ liệu được gọi là <term>phần tử</term>.
        </p>
        <p>
          Cấu trúc dữ liệu được xây dựng <em>dựa trên</em> kiểu dữ liệu, vì vậy những kiến thức ở <xref ref="sec-data-type"/> có thể được áp dụng.
        </p>
      </statement>
    </definition>
    
    <p>
      
      Từ đó, ta có thể cải thiện chương trình trên như sau:
    </p>
    
    <program language="python">
      <input>
        ps = [0, 1, 4, 9, ..., 9801]
      </input>
    </program>

    <p>
      Mặc dù vẫn không mấy thực tế (ta vẫn phải gõ 100 số), phiên bản này tốt hơn trước rất nhiều. Thay vì tạo ra 100 biến khác nhau, ta chỉ cần một biến có khả năng chứa 100 phần tử. (Đây là một <term>danh sách</term>, sẽ được bàn tới dưới đây.)
    </p>

    <p>
      Mỗi ngôn ngữ lập trình đều có tập hợp các cấu trúc dữ liệu của riêng mình. Mỗi cấu trúc dữ liệu đều có những điểm mạnh và điểm yếu.
    </p>

    <p>
      Đối với quyển sách này, hai cấu trúc dữ liệu quan trọng nhất chắc chắn phải là <term>mảng</term> và <term>ma trận</term>.
    </p>

    <note>
      
      <p>
        Hai tiểu mục sắp tới sẽ chỉ <em>giới thiệu sơ bộ</em> hai đối tượng trên.
      </p>
    </note>
  </introduction>

  <subsection xml:id="subsec-array">
    <title>Mảng</title>

    <definition xml:id="def-array">
      
      <statement>
        <p>
          <term>Mảng</term> có thể chứa nhiều phần tử cùng một lúc.
        </p>
        <p>
          Các phần tử của mảng phải có <em>cùng kiểu dữ liệu</em>.
        </p>
      </statement>
    </definition>

    <p>
      Ví dụ:
    </p>

    <aside>
      <title>Thí Nghiệm Vui</title>
      
      <p>
        Thêm phần tử vào mảng.
      </p> 
    </aside>

    <sage language="python">
      <input>
        import numpy as np # Su dung thu vien Numpy

        arr1 = np.array([1, 2, 3])
        print(arr1, type(arr1))

        arr2 = np.array([1, 2.0, 3])
        print(arr2)
      </input>
    </sage>
    <problem>
      <pre>
        [1 2 3] &lt;class 'numpy.ndarray'&gt;
        [1. 2. 3.]
      </pre>
    </problem>
    <investigation>
      
      <p></p>
      <p>
        Ta khai báo 2 mảng. Mỗi mảng có 3 phần tử.
      </p>
      <p>
        Các phần tử của <c>l1</c> đều là số nguyên.
      </p>
      <p>
        Lệnh <c>type()</c> cho ta biết kiểu dữ liệu là <c>numpy.ndarray</c>.
      </p>
      <p>
        Mảng <c>l2</c> chứa hai <c>int</c> và một <c>float</c>. Vì vậy, nó tự động chuyển đổi tất cả các phần tử thành <c>float</c>.
      </p>
    </investigation>

    <aside>
      <title>Có thể bạn sẽ hứng thú</title>
      <p>
        <ul>
          <li>
            <p>
              
              <url href="https://www.google.com/search?q=what+is+a+Python+library" visual="google.com/search?q=what+is+a+Python+library">"what is a Python library"</url>
            </p>
          </li>
          <li>
            <p>
              
              <url href="https://www.google.com/search?q=what+is+Numpy" visual="google.com/search?q=what+is+Numpy">"what is Numpy"</url>
            </p>
          </li>
        </ul>
      </p> 
    </aside>

    <note>
      
      <p>
        Có thể thấy, mảng có một cú pháp riêng biệt. Nhưng ta sẽ không đi sâu vào cú pháp và những tính năng của nó.
      </p>
      <p>
        Về cơ bản, có hai bước để sử dụng cấu trúc dữ liệu mảng:
        <ol>
          <li>
            Nhập vào thư viện Numpy với lệnh <c>import numpy as np</c>.
          </li>
          <li>
            Sử dụng mảng (array) được cung cấp bởi Numpy với cú pháp như trong ví dụ trên.
          </li>
        </ol>
      </p>
    </note>
    
  </subsection>

  <subsection xml:id="subsec-matrix">
    <title>Ma Trận</title>

    <definition xml:id="def-matrix">
      
      <statement>
        <p>
          <term>Ma trận</term> có thể chứa cùng một lúc nhiều phần tử.
        </p>
        <p>
          Các phần tử của một ma trận được sắp xếp thành các <term>hàng</term> và <term>cột</term>. Nói cách khác, ma trận có <term>hai chiều</term>.
        </p>
        <p>
          Các phần tử của ma trận phải có <em>cùng kiểu dữ liệu</em>.
        </p>
      </statement>
    </definition>

    <p>Ví dụ:</p>

    <aside>
      <title>Thí Nghiệm Vui</title>
      
      <p>
        Thêm phần tử vào ma trận.
      </p> 
      <p>
        Thêm hàng và cột cho ma trận.
      </p> 
    </aside>

    <sage language="python">
      <input>
        import numpy as np # Su dung thu vien Numpy

        mat = np.matrix([
            [1, 2, 3],
            [4, 5, 6]
        ])
        print(mat, type(mat))
      </input>
    </sage>
    <problem>
      <pre>
        [[1 2 3]
         [4 5 6]] &lt;class 'numpy.matrix'&gt;
      </pre>
    </problem>
    <investigation>
      
      <p></p>
      <p>
        Ta khai báo một ma trận có 6 phần tử thuộc kiểu <c>int</c>. Nó có 2 hàng và 3 cột.
      </p>
      <p>
        Lệnh <c>type()</c> cho thấy kiểu dữ liệu là <c>numpy.matrix</c>.
      </p>
    </investigation>
    
    <p>
      Và tương tự như mảng, nếu cần thiết ma trận cũng sẽ tự động cập nhật các phần tử để chúng thuộc cùng một kiểu dữ liệu.
    </p>
    
    <note>
      
      <p>
        Một lần nữa, ma trận có một cú pháp riêng biệt. Nhưng ta sẽ chưa đi sâu vào cú pháp và tính năng của nó.
      </p>
      <p>
        Về cơ bản, có hai bước để sử dụng cấu trúc dữ liệu ma trận:
        <ol>
          <li>
            Nhập vào thư viện Numpy với lệnh <c>import numpy as np</c>.
          </li>
          <li>
            Sử dụng ma trận (matrix) được cung cấp bởi Numpy với cú pháp như trong ví dụ trên.
          </li>
        </ol>
      </p>
    </note>
    
  </subsection>

  <conclusion>
    <p>
      <cd>
      </cd>
    </p>

    <exploration>
      <title>Basic Programming <mdash /> Part 7: Data Structures</title>
      
    
      <video youtube="iMXToAm9a0c"/>
      
    </exploration>

  </conclusion>

</section>