<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-mang" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Mảng</title>

  <objectives>
    <ol>
      <li>Các mục tiêu của section.</li>
      <li></li>
      <li></li>
    </ol>
  </objectives>
  
  <p>
    Có một khái niệm được xây dựng dựa trên <term>kiểu dữ liệu</term>, và đó chính là
     <term>cấu trúc dữ liệu</term>. Các cấu trúc 
  </p>

  <p>
    Ta có một khái niệm mới, và đó là <term>cấu trúc dữ liệu</term>. Cấu trúc dữ liệu được
     xây dựng <em>dựa trên</em> <term>kiểu dữ liệu</term>, hay nói cách khác nó cũng là một
     kiểu dữ liệu và mang tính quyết định tính năng và tương tác của biến.
  </p>

  <p>
    Để nói một cách dễ hiểu thì cấu trúc dữ liệu giúp biến có khả năng chứa cùng một lúc nhiều
     dữ liệu, có thể giống nhau hoặc khác nhau. Dưới đây là ví dụ.
  </p>

  <sage language="python">
    <input>
      arr1 = [1, 2, 3, 4]
      print(arr1, type(arr1))

      arr2 = [1, 2.5, "so"]
      print(arr2, type(arr2)) 
    </input>
    <output>
      (for static output)
    </output>
  </sage>

  <p>
    Ở trên, ta đang sử dụng cấu trúc dữ liệu <c>list</c>, hay còn được gọi là danh sách.
     Đây là một cấu trúc dữ liệu có sẵn của Python rất phổ biến. Ta có thể thấy <c>arr1</c>
     là một danh sách chứa các giá trị có kiểu <c>int</c>, còn <c>arr2</c> lại chứa một
     hỗn hợp các kiểu dữ liệu. Và để khai báo một <c>list</c>, bạn phải sử dụng ngoặc vuông
     <c>[]</c> bao quanh các phần tử và dấu phẩy <c>,</c> để ngăn cách chúng.
  </p>
  
  <p>
    Có rất nhiều cấu trúc dữ liệu thú vị và đặc biệt. Mỗi ngôn ngữ lập trình đều có tập
     hợp các cấu trúc dữ liệu riêng của mình, và, một lần nữa, điều này dựa trên mục đích
     của nó.
  </p>

  <p>
    Đối với quyển sách về ma trận này, hai cấu trúc dữ liệu quan trọng nhất chắc chắn phải là:
    <ol>
      <li>
        <p>
          Mảng
        </p>
      </li>
      <li>
        <p>
          Ma trận
        </p>
      </li>
    </ol>
  </p>

</section>